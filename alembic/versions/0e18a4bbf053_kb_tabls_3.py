"""kb tabls 3

Revision ID: 0e18a4bbf053
Revises: 730d6134da2b
Create Date: 2025-05-20 12:38:16.668716

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0e18a4bbf053'
down_revision: Union[str, None] = '730d6134da2b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('integrations',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('github', 'gitlab', 'azure_devops', 'google_docs', 'quip', 'slack', 'custom', name='integration_type'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('credentials_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('image_name', sa.String(), nullable=True),
    sa.Column('integration_help_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('knowledge_bases',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('integration_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('source_identifier', sa.Text(), nullable=False),
    sa.Column('kb_type', sa.String(length=50), nullable=True),
    sa.Column('settings_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('memory', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('state', sa.Enum('ready', 'indexing', 'error', 'disabled', 'update_error', 'updating', 'token_error', name='kb_state'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_indexed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('team_id', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('org_id', sa.String(), nullable=True),
    sa.Column('is_updatable', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_bases_org_id'), 'knowledge_bases', ['org_id'], unique=False)
    op.create_index(op.f('ix_knowledge_bases_team_id'), 'knowledge_bases', ['team_id'], unique=False)
    op.create_table('ingestion_runs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('kb_id', sa.BigInteger(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('stats_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['kb_id'], ['knowledge_bases.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('source_items',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('kb_id', sa.BigInteger(), nullable=False),
    sa.Column('provider_item_id', sa.Text(), nullable=False),
    sa.Column('kind', sa.Enum('file', 'document', 'folder', 'message', name='source_item_kind'), nullable=False),
    sa.Column('logical_path', sa.Text(), nullable=True),
    sa.Column('version_tag', sa.String(length=256), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('metadata_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['kb_id'], ['knowledge_bases.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_source_items_id'), 'source_items', ['id'], unique=False)
    op.create_table('chunks',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('source_item_id', sa.String(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('start_offset', sa.Integer(), nullable=True),
    sa.Column('end_offset', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('es_doc_id', sa.String(length=255), nullable=True),
    sa.Column('metadata_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['source_item_id'], ['source_items.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_item_id', 'chunk_index', name='uq_chunk_per_source_index')
    )
    op.create_table('ingestion_errors',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.BigInteger(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['ingestion_runs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ingestion_errors_run_id'), 'ingestion_errors', ['run_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ingestion_errors_run_id'), table_name='ingestion_errors')
    op.drop_table('ingestion_errors')
    op.drop_table('chunks')
    op.drop_index(op.f('ix_source_items_id'), table_name='source_items')
    op.drop_table('source_items')
    op.drop_table('ingestion_runs')
    op.drop_index(op.f('ix_knowledge_bases_team_id'), table_name='knowledge_bases')
    op.drop_index(op.f('ix_knowledge_bases_org_id'), table_name='knowledge_bases')
    op.drop_table('knowledge_bases')
    op.drop_table('integrations')
    # ### end Alembic commands ###
